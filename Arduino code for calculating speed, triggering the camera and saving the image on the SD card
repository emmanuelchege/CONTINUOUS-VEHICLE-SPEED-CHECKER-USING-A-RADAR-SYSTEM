#include <Adafruit_VC0706.h>
#include <SoftwareSerial.h>
#include <SPI.h>
#include <SD.h>
#include <FreqMeasure.h>
#include <LiquidCrystal.h>
#define chipSelect 53
#define ZERO ((uint8_t)0x00)
#if ARDUINO >= 100
SoftwareSerial cameraconnection = SoftwareSerial(10, 11);
#else
NewSoftSerial cameraconnection = NewSoftSerial(2, 3);
#endif
Adafruit_VC0706 cam = Adafruit_VC0706(&cameraconnection);
LiquidCrystal lcd(12, 13, 5, 4, 3, 2);
int movement = 52;
float spd;
void setup() {
#if !defined(SOFTWARE_SPI)
#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
if(chipSelect != 53) pinMode(53, OUTPUT);
if(chipSelect != 10) pinMode(10, OUTPUT);
#endif
Serial.begin(57600);
Serial.println("VC0706 Camera snapshot test");
52
if (!SD.begin(chipSelect)) {
Serial.println("Card failed, or not present");
return;
}
if (cam.begin()) {
Serial.println("Camera Found:");
} else {
Serial.println("No camera found?");
return;
}
char *reply = cam.getVersion();
if (reply == 0) {
Serial.print("Failed to get version");
} else {
Serial.println("-----------------");
Serial.print(reply);
Serial.println("-----------------");
}
cam.setImageSize(VC0706_160x120); //
uint8_t imgsize = cam.getImageSize();
Serial.print("Image size: ");
if (imgsize == VC0706_640x480) Serial.println("640x480");
if (imgsize == VC0706_320x240) Serial.println("320x240");
if (imgsize == VC0706_160x120) Serial.println("160x120");
lcd.begin(16, 2);
lcd.print("Freq:");
lcd.setCursor(10,0);
lcd.print("Speed:");
53
FreqMeasure.begin();
}
double sum=0;
int count=0;
void loop() {
if (FreqMeasure.available()) {
sum = sum + FreqMeasure.read();
count = count + 1;
if (count > 1) {
int frequency = FreqMeasure.countToFrequency(sum / count);
if ( frequency > movement ) {
spd = frequency / 19.49; //conversion from frequency to kilometers per
hour
lcd.setCursor(0,1);
lcd.print(" ");
lcd.setCursor(0,1);
lcd.print(frequency);
lcd.print("Hz");
//lcd.print(" ");
lcd.setCursor(8,1);
lcd.print(spd);
lcd.print("km/h");
}
sum = 0;
count = 0;
if(spd>=7.0){
Serial.println("Snap in 3 secs...");
delay(1000);
if (! cam.takePicture())
Serial.println("Failed to snap!");
else
Serial.println("Picture taken!");
54
char filename[13];
strcpy(filename, "IMAGE00.JPG");
for (int i = 0; i < 100; i++) {
filename[5] = '0' + i/10;
filename[6] = '0' + i%10;
if (! SD.exists(filename)) {
break;
}
}
File imgFile = SD.open(filename, FILE_WRITE);
uint16_t jpglen = cam.frameLength();
Serial.print("Storing ");
Serial.print(jpglen, DEC);
Serial.print(" byte image.");
int32_t time = millis();
pinMode(8, OUTPUT);
byte wCount = 0;
while (jpglen > 0) {
uint8_t *buffer;
uint8_t bytesToRead = min(32, jpglen);
buffer = cam.readPicture(bytesToRead);
imgFile.write(buffer, bytesToRead);
if(++wCount >= 64) {
Serial.print('.');
wCount = 0;
}
jpglen -= bytesToRead;
}
55
imgFile.close();
time = millis() - time;
Serial.println("done!");
Serial.print(time); Serial.println(" ms elapsed");
}
}
}
}
